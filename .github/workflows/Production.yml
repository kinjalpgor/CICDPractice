name: Production Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: windows-latest
    env:
      IIS_SERVER_COMPUTER_NAME: ${{ secrets.IIS_SERVER_COMPUTER_NAME }}
      IIS_WEBSITE_NAME: ${{ secrets.IIS_WEBSITE_NAME }}
      IIS_SERVER_USERNAME: ${{ secrets.IIS_SERVER_USERNAME }}
      IIS_SERVER_PASSWORD: ${{ secrets.IIS_SERVER_PASSWORD }}
      WEBSITE_CONTENT_PATH: ${{ secrets.WEBSITE_CONTENT_PATH }}
      
    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
   
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~\.nuget\packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**\packages.lock.json') }}    

    - name: Restore dependencies
      run: cd CICDPractice/ && dotnet restore
      
    - name: Build
      run: cd CICDPractice/ && dotnet build --configuration Release --no-restore /p:DebugType=None
          
    - name: Dotnet publish
      run: dotnet publish CICDPractice/CICDPractice.csproj -o Publish/CICDPractice/ --self-contained false /p:DebugType=None
      
    - name: Upload Build Publish Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Publish
        path: Publish/CICDPractice/
    - name: Deploy Application
      shell: cmd
      run: '"C:/Program Files (x86)/IIS/Microsoft Web Deploy V3/msdeploy.exe" -verb:sync -allowUntrusted -source:contentPath="Publish/CICDPractice/" -dest:contentPath="${{ env.WEBSITE_CONTENT_PATH }}",computerName="${{ env.IIS_SERVER_COMPUTER_NAME }}/msdeploy.axd?site=${{ env.IIS_WEBSITE_NAME }}",username="${{ env.IIS_SERVER_USERNAME }}",password="${{ env.IIS_SERVER_PASSWORD }}",authtype="Basic"'
  #  - name: GitHub Actions WebDeploy
  #    uses: cschleiden/webdeploy-action@v1
  #    with:
   #     webSiteName: 'MyDemoSite'
    #    publish-profile: ${{secrets.AZURE_WEBDEPLOY_PUBLISH_PROFILE}}
      #  package: Publish/CICDPractice/

   # - name : Deploy to Azure App service
   #   uses: azure/webapps-deploy@v2
   #   with:
   #     app-name: CICDPracticeApp
   #     publish-profile: ${{secrets.AZURE_WEBDEPLOY_PUBLISH_PROFILE}}
   #     package: Publish/CICDPractice/
